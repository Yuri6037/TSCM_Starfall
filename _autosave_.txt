--@name LanAI X
--@author Yuri6037
--@class processor
--@autoupdate
--@model models/bidonstoragedest.mdl

--
-- LanAI X Main processor file
-- Pase using SF Processor tool
-- Report bugs and/or ask for improvements here https://github.com/Yuri6037/TSCM_Starfall
--

--For dynamic beams push wire GPS ~105 units to the bottom

--Beware lib_protocol might still be able to crash accross LanAI instances, if it happens,
--please remove it temporarly from Systems.Secondary

--The processor files
ProcessorFiles = {
	Drivers = {
		"basics",
		"beam",
		"props",
		"timer",
		"valve",
		"warp",
		"weapons",
		"lanteansos",
		"sensor",
		"doors",
		"engines",
		"stargate",
		"torpedomatrix",
		"atlantisshield"
	},
	Systems = {
        Primary = {
			"wirehooks",
			"internal_security_primary",
			--The transmission protocol
			"protocol",
			"basic_packets",
            "ai_utils",
            "ai_decoder",
            "ai_answer",
			"permissions",
            "multitarget", --Important system commands and combat system depends on it
            "points_manager",
            "dangeridentifier"
        },
        Secondary = {
			"lib_protocol",
            "ai_listener",
            "ship_auto_load",
            "automatic_mode",
            "combat",
            "internal_security_secondary",
            "plan_gen",
            "jailmanager",
            --Extensions
            "weapon_debugger"
        }
	},
	OSApps = {
		"resource",
		"status",
		"warp",
		"beam",
		"tactical",
		"shieldpower",
		"env",
		"valve",
		"doorsview",
		"sgstatus",
		"sgdial"
	}
}

--LanAI Constants
--@require lanai/constants.txt

--Including server libs
--@require lanai/libs/processor/lanaifiles.txt
--@require lanai/libs/processor/string_lib.txt
--@require lanai/libs/processor/math_lib.txt
--@require lanai/libs/bypass.txt
--@require lanai/libs/processor/ship_sensor_hacker.txt
--@require lanai/libs/tasks.txt
--@require lanai/libs/logging.txt

--Including the LanAI loading process
--@include lanai/processor/internal/lanai_loader.txt

--Utilities
--@require lanai/processor/internal/utilities.txt

--The folder includes
--@includedir lanai/processor/ai_cmds/
--@includedir lanai/processor/systems/
--@includedir lanai/processor/drivers/

--
-- [[Load primary systems]]
--

--Setup starfall permissions
permissions.register(permissions.REMOVE_ENTITY)
permissions.register(permissions.SPAWN_ENTITY)

--Init logging
util.SetLogLevel(0)
util.AddLogHandler(function(msg)
	printConsole("LanAI> " .. msg)
end)

--Set core to be loading
Loading = true

--Init task system
TaskError = nil
task.SetErrorCallback(function(id, err)
	util.Log("Tasks", LOG_ERR, "Task '", id, "' : ", err)
end)

--Create required hooks
util.CreateHook("PreLoad")
util.CreateHook("PostLoad")

--Inject primary systems
util.Log("Main", LOG_INFO, "LanAI ", VERSION_AI)
for k, v in pairs(ProcessorFiles.Systems.Primary) do
	util.Log("Systems", LOG_DEBUG, "Loading primary system '", v, "'...")
	require("lanai/processor/systems/" .. v .. ".txt")
end

--
-- [[End]]
--

util.Log("Main", LOG_INFO, "ConstraintsRetriever V", VERSION_PLOADER)
aiSay("Retrieving all constrained entities...")

--Entity listing vars
SFAllowedSubEntities = {}
SHIP_PARTS_BOOL = {}
SHIP_PARTS = {}

--The preload thread
local Thread = nil
SendPacket("PRELOAD", "START")
ents.self():setSubMaterial(0, "glow/yellow_light")
ents.self():setSubMaterial(1, "Boba_Fett/textures/destiny")

function MasterBoot()
	Thread = bypass.StartConstraintsRetriever(ents.self(), function(fuck, num)
		util.Log("Main", LOG_INFO, "Found ship with ", #fuck, " entities.")
		aiSay("Initializing Systems...")
		SendPacket("PRELOAD", "END")

		SHIP_PARTS = fuck
		SHIP_PARTS_BOOL = bypass.GetRetrievedConstraintsBool()

		util.RunHook("PreLoad")
		require("lanai/processor/internal/lanai_loader.txt")

		timer.remove("LanAI_AttemptConstraintsGetWait")
	end, function(fuck, num, err)
		if (err == "StoppedWorking") then
			SendPacket("PRELOAD", "UPD", "FAILURE")
			ents.self():setSubMaterial(0, "phoenix_storms/pack2/redlight")

			util.Log("Main", LOG_ERR, "ConstraintsRetriever stopped working after ", #fuck, " loaded entities")
		else
			SendPacket("PRELOAD", "UPD", "FAILURE")
			ents.self():setSubMaterial(0, "phoenix_storms/pack2/redlight")

			util.Log("Main", LOG_ERR, "ConstraintsRetriever crashed after ", #fuck, " loaded entities")
			util.Log("Main", LOG_ERR, "Error : ", ErrorString)
		end
	end)
end

--Run master boot (getConstraints replacement thread)
if (starfall.isSpawnedFromDuplicator()) then
	timer.create("LanAI_ForceWaitAdvDupe2", 35, 1, MasterBoot)
else
	MasterBoot()
end
